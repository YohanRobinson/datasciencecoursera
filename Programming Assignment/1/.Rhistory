colnames(cc) <- (c("id", "nobs"))
#Function loading complete cases of a monitor with ID=idnr
nobs <- function(idnr = 1:332) {
readdata <- read.csv(makefilename(directory, idnr),header=T)
# remove rows with NA
readdata <- readdata[-which(is.na(readdata[,2:3])==T), ]
# return number of rows in complete-cases dataframe
return(nrow(readdata))
}
for (i in 1:length(id)){
c[i,1] <- id[i]
c[i,2] <- nobs(id[i])
}
data.frame(c)
return(c)
}
corr <- function(directory, threshold = integer) {
makefilename <- function (directory, fn=integer(1:332)){
idname <- c("0","0","0")
if (fn>99) idname[1] <- as.integer(fn/100)
if (fn>9) idname[2] <- as.integer((fn - (as.integer(idname[1])*100))/10)
idname[3] <- fn - (as.integer(idname[1])*100) - (as.integer(idname[2])*10)
filename <- paste0(directory,"/",idname[1],idname[2],idname[3],".csv")
return(filename)
}
rd <- matrix()
n <- 0
for (i in 1:332) {
if (as.list(complete(directory,i)$nobs[1])>=threshold){
n <- n+1
readdata <- read.csv(makefilename(directory, i),header=T)
rd[n] <- cor(readdata$sulfate,readdata$nitrate, use="pairwise.complete.obs")
}
}
data.frame(rd)
return(rd)
}
complete("specdata", 54)
complete <- function(directory, id = 1:332) {
makefilename <- function (directory, fn=integer(1:332)){
idname <- c("0","0","0")
if (fn>99) idname[1] <- as.integer(fn/100)
if (fn>9) idname[2] <- as.integer((fn - (as.integer(idname[1])*100))/10)
idname[3] <- fn - (as.integer(idname[1])*100) - (as.integer(idname[2])*10)
filename <- paste0(directory,"/",idname[1],idname[2],idname[3],".csv")
return(filename)
}
c <- data.frame(length(id),2)
colnames(cc) <- (c("id", "nobs"))
#Function loading complete cases of a monitor with ID=idnr
nobs <- function(idnr = 1:332) {
readdata <- read.csv(makefilename(directory, idnr),header=T)
# remove rows with NA
readdata <- readdata[-which(is.na(readdata[,2:3])==T), ]
# return number of rows in complete-cases dataframe
return(nrow(readdata))
}
for (i in 1:length(id)){
c[i,1] <- id[i]
c[i,2] <- nobs(id[i])
}
3 data.frame(c)
return(c)
}
complete <- function(directory, id = 1:332) {
makefilename <- function (directory, fn=integer(1:332)){
idname <- c("0","0","0")
if (fn>99) idname[1] <- as.integer(fn/100)
if (fn>9) idname[2] <- as.integer((fn - (as.integer(idname[1])*100))/10)
idname[3] <- fn - (as.integer(idname[1])*100) - (as.integer(idname[2])*10)
filename <- paste0(directory,"/",idname[1],idname[2],idname[3],".csv")
return(filename)
}
c <- data.frame(length(id),2)
colnames(cc) <- (c("id", "nobs"))
#Function loading complete cases of a monitor with ID=idnr
nobs <- function(idnr = 1:332) {
readdata <- read.csv(makefilename(directory, idnr),header=T)
# remove rows with NA
readdata <- readdata[-which(is.na(readdata[,2:3])==T), ]
# return number of rows in complete-cases dataframe
return(nrow(readdata))
}
for (i in 1:length(id)){
c[i,1] <- id[i]
c[i,2] <- nobs(id[i])
}
# data.frame(c)
return(c)
}
corr <- function(directory, threshold = integer) {
makefilename <- function (directory, fn=integer(1:332)){
idname <- c("0","0","0")
if (fn>99) idname[1] <- as.integer(fn/100)
if (fn>9) idname[2] <- as.integer((fn - (as.integer(idname[1])*100))/10)
idname[3] <- fn - (as.integer(idname[1])*100) - (as.integer(idname[2])*10)
filename <- paste0(directory,"/",idname[1],idname[2],idname[3],".csv")
return(filename)
}
rd <- matrix()
n <- 0
for (i in 1:332) {
if (as.list(complete(directory,i)$nobs[1])>=threshold){
n <- n+1
readdata <- read.csv(makefilename(directory, i),header=T)
rd[n] <- cor(readdata$sulfate,readdata$nitrate, use="pairwise.complete.obs")
}
}
data.frame(rd)
return(rd)
}
complete("specdata", 54)
rm(list=ls())
source("complete.R")
cc <- complete("specdata", 54)
source("complete.R")
cc <- complete("specdata", 54)
cc$nobs
source("complete.R")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
paste(cc[use, "nobs"], collapse = "\n")
}
source(submitscript1.R)
submit()
source(submitscript1.R)
getwd()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
paste(cc$nobs, collapse = "\n")
complete <- function(directory, id = 1:332) {
makefilename <- function (directory, fn=integer(1:332)){
idname <- c("0","0","0")
if (fn>99) idname[1] <- as.integer(fn/100)
if (fn>9) idname[2] <- as.integer((fn - (as.integer(idname[1])*100))/10)
idname[3] <- fn - (as.integer(idname[1])*100) - (as.integer(idname[2])*10)
filename <- paste0(directory,"/",idname[1],idname[2],idname[3],".csv")
return(filename)
}
c <- data.frame(length(id),2)
colnames(c) <- (c("id", "nobs"))
#Function loading complete cases of a monitor with ID=idnr
nobs <- function(idnr = 1:332) {
readdata <- read.csv(makefilename(directory, idnr),header=T)
# remove rows with NA
readdata <- readdata[-which(is.na(readdata[,2:3])==T), ]
# return number of rows in complete-cases dataframe
return(nrow(readdata))
}
for (i in 1:length(id)){
c[i,1] <- id[i]
c[i,2] <- nobs(id[i])
}
data.frame(c)
return(c)
}
source(submitscript1.R)
getwd()
source("submitscript1.R")
submit()
source("submitscript1.R")
submit()
submit()
submit()
complete("specdata", c(2, 4, 8, 10, 12))    # 1041, 474, 192, 148, 96
complete <- function(directory, id = 1:332) {
#Function creating filename
makefilename <- function (directory, fn=integer(1:332)){
idname <- c("0","0","0")
if (fn>99) idname[1] <- as.integer(fn/100)
if (fn>9) idname[2] <- as.integer((fn - (as.integer(idname[1])*100))/10)
idname[3] <- fn - (as.integer(idname[1])*100) - (as.integer(idname[2])*10)
filename <- paste0(directory,"/",idname[1],idname[2],idname[3],".csv")
return(filename)
}
#Function loading complete cases of a monitor with ID=idnr
nobs <- function(idnr = 1:332) {
readdata <- read.csv(makefilename(directory, idnr),header=T)
# remove rows with NA
readdata <- readdata[-which(is.na(readdata[,2:3])==T), ]
# return number of rows in complete-cases dataframe
return(nrow(readdata))
}
#create a nice table for function output
c <- data.frame((length(id)+1),2)
colnames(c) <- (c("id", "nobs"))
for (i in 1:length(id)){
c[i,1] <- id[i]
c[i,2] <- nobs(id[i])
}
return(c)
}
complete("specdata", c(2, 4, 8, 10, 12))    # 1041, 474, 192, 148, 96
complete("specdata", 3)                     # 243
complete("specdata", 30:25)
submit()
complete <- function(directory, id = 1:332) {
#Function creating filename
makefilename <- function (directory, fn=integer(1:332)){
idname <- c("0","0","0")
if (fn>99) idname[1] <- as.integer(fn/100)
if (fn>9) idname[2] <- as.integer((fn - (as.integer(idname[1])*100))/10)
idname[3] <- fn - (as.integer(idname[1])*100) - (as.integer(idname[2])*10)
filename <- paste0(directory,"/",idname[1],idname[2],idname[3],".csv")
return(filename)
}
#Function loading complete cases of a monitor with ID=idnr
nobs <- function(idnr = 1:332) {
readdata <- read.csv(makefilename(directory, idnr),header=T)
# remove rows with NA
readdata <- readdata[-which(is.na(readdata[,2:3])==T), ]
# return number of rows in complete-cases dataframe
return(nrow(readdata))
}
#create a nice table for function output
c <- data.frame(length(id),2)
colnames(c) <- c("id", "nobs")
for (i in 1:length(id)){
c[i,1] <- id[i]
c[i,2] <- nobs(id[i])
}
return(c)
}
complete("specdata", 1)                     # 117
complete("specdata", c(2, 4, 8, 10, 12))    # 1041, 474, 192, 148, 96
complete("specdata", 3)                     # 243
complete("specdata", 30:25)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("submitscript1.R")
submit()
source("submitscript1.R")
submit()
complete <- function(directory, id = 1:332) {
#open full name list of files in directory
files_full <- list.files(directory, full.names=TRUE)
#create empty data frames to
#hold contents of directoryprint(files_full)
dat<-data.frame()
nobs<-data.frame()
nobs2<-data.frame()
#loop thru directory
for (i in id) {
#read file
dat <- read.csv(files_full[i])
#remove NA
nobs2<-na.omit(dat)
#count rows in NA scrubbed and pass to new frame
nobs<-append(nobs,nrow(nobs2))
#bind column row count and ID
results <- cbind(id, nobs)
}
results
}
source("submitscript1.R")
submit()
source("submitscript1.R")
submit()
cr <- corr("specdata", 150)
head(cr)    ## [1] -0.01896 -0.14051 -0.04390 -0.06816 -0.12351 -0.07589
cr <- corr("specdata", 150)
complete("specdata", 1)                     # 117
complete("specdata", c(2, 4, 8, 10, 12))    # 1041, 474, 192, 148, 96
complete("specdata", 3)                     # 243
complete("specdata", 30:25)
complete <- function(directory, id = 1:332) {
makefilename <- list.files(directory, full.names=TRUE)
#Function loading complete cases of a monitor with ID=idnr
nobs <- function(idnr = 1:332) {
readdata <- read.csv(makefilename,header=T)
# remove rows with NA
readdata <- readdata[-which(is.na(readdata[,2:3])==T), ]
# return number of rows in complete-cases dataframe
return(nrow(readdata))
}
#create a nice table for function output
c <- data.frame(length(id),2)
colnames(c) <- c("id", "nobs")
for (i in 1:length(id)){
c[i,1] <- id[i]
c[i,2] <- nobs(id[i])
}
return(c)
}
- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
# test
complete("specdata", 1)                     # 117
complete("specdata", 1)                     # 117
# Programming assignment 1
# Yohan Robinson
# 2015-12-20
#
# ------- PART 2 -------
# Function for creating character filename from integer value
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
allFiles <- list.files(path = directory, full.names = TRUE)
selectedData <- data.frame()
completeCases <- data.frame()
nobs <- data.frame();
for (i in id) {
selectedData <- (read.csv(allFiles[i],header=TRUE))
nobs <- sum(complete.cases(selectedData))
completeCases <- rbind(completeCases, data.frame(i,nobs))
}
completeCases
}
complete("specdata", 1)                     # 117
complete("specdata", c(2, 4, 8, 10, 12))    # 1041, 474, 192, 148, 96
complete("specdata", 3)                     # 243
source("submitscript1.R")
submit()
complete <- function(directory, id = 1:332) {
allFiles <- list.files(path = directory, full.names = TRUE)
readdata <- data.frame()
completecases <- data.frame()
nobs <- data.frame();
for (i in id) {
readdata <- (read.csv(allFiles[i],header=TRUE))
nobs <- sum(complete.cases(readdata))
completecases <- rbind(completecases, data.frame(i,nobs))
}
return(completeCases)
}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
complete <- function(directory, id = 1:332) {
#read filenames from directory
allFiles <- list.files(path = directory, full.names = TRUE)
#create empty variables
readdata <- data.frame()
completecases <- data.frame()
nobs <- data.frame();
#loopsearch complete cases
for (i in id) {
readdata <- (read.csv(allFiles[i],header=TRUE))
nobs <- sum(complete.cases(readdata))
#create new row with id and nobs
completecases <- rbind(completecases, data.frame(i,nobs))
}
return(completecases)
}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
corr <- function(directory, threshold = integer) {
#read filenames from directory
filelist <- list.files(path = directory, full.names = TRUE)
#create empty variables
readdata <- data.frame()
rd <- matrix()
n <- 0
for (i in 1:332) {
if (as.list(complete(directory,i)$nobs[1])>=threshold){
n <- n+1
readdata <- read.csv(filelist[i], header=TRUE)
rd[n] <- cor(readdata$sulfate,readdata$nitrate, use="pairwise.complete.obs")
}
}
data.frame(rd)
return(rd)
}
cr <- corr("specdata", 150)
head(cr)    ## [1] -0.01896 -0.14051 -0.04390 -0.06816 -0.12351 -0.07589
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
corr <- function(directory, threshold = 0) {
completeCases <- complete(directory)
casesAboveThreshold <- completeCases[completeCases$nobs > threshold,1]
allFiles <- list.files(path = directory, full.names = TRUE)
correlations <- rep(NA,length(casesAboveThreshold))
for (i in casesAboveThreshold) {
fileData <- (read.csv(allFiles[i]))
completeCases <- complete.cases(fileData)
validSulfateData <- fileData[completeCases, 2]
validNitrateData <- fileData[completeCases, 3]
correlations[i] <- cor(x = validSulfateData, y = validNitrateData)
#print(head(fileData[completeCases,]))
#print(validSulfateData)
#print(validNitrateData)
}
correlations <- correlations[complete.cases(correlations)]
}
corr <- function(directory, threshold = 0) {
completeCases <- complete(directory)
casesAboveThreshold <- completeCases[completeCases$nobs > threshold,1]
allFiles <- list.files(path = directory, full.names = TRUE)
correlations <- rep(NA,length(casesAboveThreshold))
for (i in casesAboveThreshold) {
fileData <- (read.csv(allFiles[i]))
completeCases <- complete.cases(fileData)
validSulfateData <- fileData[completeCases, 2]
validNitrateData <- fileData[completeCases, 3]
correlations[i] <- cor(x = validSulfateData, y = validNitrateData)
#print(head(fileData[completeCases,]))
#print(validSulfateData)
#print(validNitrateData)
}
correlations <- correlations[complete.cases(correlations)]
return(correlations)
}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
corr <- function(directory, threshold = integer) {
#read filenames from directory
filelist <- list.files(path = directory, full.names = TRUE)
#create empty variables
readdata <- data.frame()
rd <- matrix()
n <- 0
for (i in 1:332) {
if (as.list(complete(directory,i)$nobs[1])>=threshold){
n <- n+1
readdata <- read.csv(filelist[i], header=TRUE)
rd[n] <- cor(readdata$sulfate,readdata$nitrate, use="pairwise.complete.obs")
}
}
data.frame(rd)
return(rd)
}
source("submitscript1.R")
submit()
source("submitscript1.R")
submit()
source("submitscript1.R")
submit()
cr <- corr("specdata")
corr <- function(directory, threshold = integer(0)) {
#read filenames from directory
filelist <- list.files(path = directory, full.names = TRUE)
#create empty variables
readdata <- data.frame()
rd <- matrix()
n <- 0
for (i in 1:332) {
if (as.list(complete(directory,i)$nobs[1])>=threshold){
n <- n+1
readdata <- read.csv(filelist[i], header=TRUE)
rd[n] <- cor(readdata$sulfate,readdata$nitrate, use="pairwise.complete.obs")
}
}
data.frame(rd)
return(rd)
}
cr <- corr("specdata")
corr <- function(directory, threshold = integer(1000000)) {
#read filenames from directory
filelist <- list.files(path = directory, full.names = TRUE)
#create empty variables
readdata <- data.frame()
rd <- matrix()
n <- 0
for (i in 1:332) {
if (as.list(complete(directory,i)$nobs[1])>=threshold){
n <- n+1
readdata <- read.csv(filelist[i], header=TRUE)
rd[n] <- cor(readdata$sulfate,readdata$nitrate, use="pairwise.complete.obs")
}
}
data.frame(rd)
return(rd)
}
cr <- corr("specdata")
warnings()
corr <- function(directory, threshold = integer(1000000)) {
#read filenames from directory
filelist <- list.files(path = directory, full.names = TRUE)
#create empty variables
readdata <- data.frame()
rd <- matrix()
n <- 0
for (i in 1:332) {
if (as.data.frame(complete(directory,i)$nobs[1])>=threshold){
n <- n+1
readdata <- read.csv(filelist[i], header=TRUE)
rd[n] <- cor(readdata$sulfate,readdata$nitrate, use="pairwise.complete.obs")
}
}
data.frame(rd)
return(rd)
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
paste(out, collapse = "\n")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
library KernSmooth()
library(KernSmooth)
